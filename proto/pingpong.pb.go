// pingpong.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: pingpong.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IsGameActiveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Active        bool                   `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsGameActiveResponse) Reset() {
	*x = IsGameActiveResponse{}
	mi := &file_pingpong_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsGameActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsGameActiveResponse) ProtoMessage() {}

func (x *IsGameActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsGameActiveResponse.ProtoReflect.Descriptor instead.
func (*IsGameActiveResponse) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{0}
}

func (x *IsGameActiveResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type NewMatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewMatchRequest) Reset() {
	*x = NewMatchRequest{}
	mi := &file_pingpong_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMatchRequest) ProtoMessage() {}

func (x *NewMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMatchRequest.ProtoReflect.Descriptor instead.
func (*NewMatchRequest) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{1}
}

type NewMatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewMatchResponse) Reset() {
	*x = NewMatchResponse{}
	mi := &file_pingpong_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMatchResponse) ProtoMessage() {}

func (x *NewMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMatchResponse.ProtoReflect.Descriptor instead.
func (*NewMatchResponse) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{2}
}

func (x *NewMatchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BallPower     int32                  `protobuf:"varint,1,opt,name=ball_power,json=ballPower,proto3" json:"ball_power,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_pingpong_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{3}
}

func (x *PingRequest) GetBallPower() int32 {
	if x != nil {
		return x.BallPower
	}
	return 0
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_pingpong_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{4}
}

type GetMatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMatchRequest) Reset() {
	*x = GetMatchRequest{}
	mi := &file_pingpong_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchRequest) ProtoMessage() {}

func (x *GetMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchRequest.ProtoReflect.Descriptor instead.
func (*GetMatchRequest) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{5}
}

type GetMatchByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMatchByIDRequest) Reset() {
	*x = GetMatchByIDRequest{}
	mi := &file_pingpong_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMatchByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchByIDRequest) ProtoMessage() {}

func (x *GetMatchByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchByIDRequest.ProtoReflect.Descriptor instead.
func (*GetMatchByIDRequest) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{6}
}

func (x *GetMatchByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TestDBRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestDBRequest) Reset() {
	*x = TestDBRequest{}
	mi := &file_pingpong_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestDBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDBRequest) ProtoMessage() {}

func (x *TestDBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDBRequest.ProtoReflect.Descriptor instead.
func (*TestDBRequest) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{7}
}

type TestDBResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestDBResponse) Reset() {
	*x = TestDBResponse{}
	mi := &file_pingpong_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestDBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDBResponse) ProtoMessage() {}

func (x *TestDBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDBResponse.ProtoReflect.Descriptor instead.
func (*TestDBResponse) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{8}
}

func (x *TestDBResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StartGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameRequest) Reset() {
	*x = StartGameRequest{}
	mi := &file_pingpong_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameRequest) ProtoMessage() {}

func (x *StartGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameRequest.ProtoReflect.Descriptor instead.
func (*StartGameRequest) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{9}
}

type StartGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameResponse) Reset() {
	*x = StartGameResponse{}
	mi := &file_pingpong_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameResponse) ProtoMessage() {}

func (x *StartGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameResponse.ProtoReflect.Descriptor instead.
func (*StartGameResponse) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{10}
}

func (x *StartGameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReceiveBallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BallPower     int32                  `protobuf:"varint,1,opt,name=ball_power,json=ballPower,proto3" json:"ball_power,omitempty"`
	FromPlayer    string                 `protobuf:"bytes,2,opt,name=from_player,json=fromPlayer,proto3" json:"from_player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveBallRequest) Reset() {
	*x = ReceiveBallRequest{}
	mi := &file_pingpong_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveBallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveBallRequest) ProtoMessage() {}

func (x *ReceiveBallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveBallRequest.ProtoReflect.Descriptor instead.
func (*ReceiveBallRequest) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{11}
}

func (x *ReceiveBallRequest) GetBallPower() int32 {
	if x != nil {
		return x.BallPower
	}
	return 0
}

func (x *ReceiveBallRequest) GetFromPlayer() string {
	if x != nil {
		return x.FromPlayer
	}
	return ""
}

type ReceiveBallResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveBallResponse) Reset() {
	*x = ReceiveBallResponse{}
	mi := &file_pingpong_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveBallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveBallResponse) ProtoMessage() {}

func (x *ReceiveBallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveBallResponse.ProtoReflect.Descriptor instead.
func (*ReceiveBallResponse) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{12}
}

type Match struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MatchNumber   int32                  `protobuf:"varint,2,opt,name=match_number,json=matchNumber,proto3" json:"match_number,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Winner        string                 `protobuf:"bytes,5,opt,name=winner,proto3" json:"winner,omitempty"`
	Turns         []*Turn                `protobuf:"bytes,6,rep,name=turns,proto3" json:"turns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Match) Reset() {
	*x = Match{}
	mi := &file_pingpong_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{13}
}

func (x *Match) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Match) GetMatchNumber() int32 {
	if x != nil {
		return x.MatchNumber
	}
	return 0
}

func (x *Match) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Match) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Match) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

func (x *Match) GetTurns() []*Turn {
	if x != nil {
		return x.Turns
	}
	return nil
}

type Turn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TurnNumber    int32                  `protobuf:"varint,2,opt,name=turn_number,json=turnNumber,proto3" json:"turn_number,omitempty"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Player        string                 `protobuf:"bytes,4,opt,name=player,proto3" json:"player,omitempty"`
	BallPower     int32                  `protobuf:"varint,5,opt,name=ball_power,json=ballPower,proto3" json:"ball_power,omitempty"`
	RoutineId     string                 `protobuf:"bytes,6,opt,name=routine_id,json=routineId,proto3" json:"routine_id,omitempty"`
	MatchNumber   int32                  `protobuf:"varint,7,opt,name=match_number,json=matchNumber,proto3" json:"match_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Turn) Reset() {
	*x = Turn{}
	mi := &file_pingpong_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Turn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Turn) ProtoMessage() {}

func (x *Turn) ProtoReflect() protoreflect.Message {
	mi := &file_pingpong_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Turn.ProtoReflect.Descriptor instead.
func (*Turn) Descriptor() ([]byte, []int) {
	return file_pingpong_proto_rawDescGZIP(), []int{14}
}

func (x *Turn) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Turn) GetTurnNumber() int32 {
	if x != nil {
		return x.TurnNumber
	}
	return 0
}

func (x *Turn) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Turn) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *Turn) GetBallPower() int32 {
	if x != nil {
		return x.BallPower
	}
	return 0
}

func (x *Turn) GetRoutineId() string {
	if x != nil {
		return x.RoutineId
	}
	return ""
}

func (x *Turn) GetMatchNumber() int32 {
	if x != nil {
		return x.MatchNumber
	}
	return 0
}

var File_pingpong_proto protoreflect.FileDescriptor

const file_pingpong_proto_rawDesc = "" +
	"\n" +
	"\x0epingpong.proto\x12\bpingpong\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\".\n" +
	"\x14IsGameActiveResponse\x12\x16\n" +
	"\x06active\x18\x01 \x01(\bR\x06active\"\x11\n" +
	"\x0fNewMatchRequest\",\n" +
	"\x10NewMatchResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\",\n" +
	"\vPingRequest\x12\x1d\n" +
	"\n" +
	"ball_power\x18\x01 \x01(\x05R\tballPower\"\x0e\n" +
	"\fPingResponse\"\x11\n" +
	"\x0fGetMatchRequest\"%\n" +
	"\x13GetMatchByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x0f\n" +
	"\rTestDBRequest\"*\n" +
	"\x0eTestDBResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x12\n" +
	"\x10StartGameRequest\"-\n" +
	"\x11StartGameResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"T\n" +
	"\x12ReceiveBallRequest\x12\x1d\n" +
	"\n" +
	"ball_power\x18\x01 \x01(\x05R\tballPower\x12\x1f\n" +
	"\vfrom_player\x18\x02 \x01(\tR\n" +
	"fromPlayer\"\x15\n" +
	"\x13ReceiveBallResponse\"\xea\x01\n" +
	"\x05Match\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12!\n" +
	"\fmatch_number\x18\x02 \x01(\x05R\vmatchNumber\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x16\n" +
	"\x06winner\x18\x05 \x01(\tR\x06winner\x12$\n" +
	"\x05turns\x18\x06 \x03(\v2\x0e.pingpong.TurnR\x05turns\"\xe0\x01\n" +
	"\x04Turn\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1f\n" +
	"\vturn_number\x18\x02 \x01(\x05R\n" +
	"turnNumber\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12\x16\n" +
	"\x06player\x18\x04 \x01(\tR\x06player\x12\x1d\n" +
	"\n" +
	"ball_power\x18\x05 \x01(\x05R\tballPower\x12\x1d\n" +
	"\n" +
	"routine_id\x18\x06 \x01(\tR\troutineId\x12!\n" +
	"\fmatch_number\x18\a \x01(\x05R\vmatchNumber2\xd0\x03\n" +
	"\rPlayerService\x12F\n" +
	"\rStartNewMatch\x12\x19.pingpong.NewMatchRequest\x1a\x1a.pingpong.NewMatchResponse\x12<\n" +
	"\vPlayerAPing\x12\x15.pingpong.PingRequest\x1a\x16.pingpong.PingResponse\x12<\n" +
	"\vPlayerBPing\x12\x15.pingpong.PingRequest\x1a\x16.pingpong.PingResponse\x126\n" +
	"\bGetMatch\x12\x19.pingpong.GetMatchRequest\x1a\x0f.pingpong.Match\x12>\n" +
	"\fGetMatchByID\x12\x1d.pingpong.GetMatchByIDRequest\x1a\x0f.pingpong.Match\x12;\n" +
	"\x06TestDB\x12\x17.pingpong.TestDBRequest\x1a\x18.pingpong.TestDBResponse\x12F\n" +
	"\fIsGameActive\x12\x16.google.protobuf.Empty\x1a\x1e.pingpong.IsGameActiveResponse2\xa0\x01\n" +
	"\fTableService\x12D\n" +
	"\tStartGame\x12\x1a.pingpong.StartGameRequest\x1a\x1b.pingpong.StartGameResponse\x12J\n" +
	"\vReceiveBall\x12\x1c.pingpong.ReceiveBallRequest\x1a\x1d.pingpong.ReceiveBallResponseB\x10Z\x0epingpong/protob\x06proto3"

var (
	file_pingpong_proto_rawDescOnce sync.Once
	file_pingpong_proto_rawDescData []byte
)

func file_pingpong_proto_rawDescGZIP() []byte {
	file_pingpong_proto_rawDescOnce.Do(func() {
		file_pingpong_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pingpong_proto_rawDesc), len(file_pingpong_proto_rawDesc)))
	})
	return file_pingpong_proto_rawDescData
}

var file_pingpong_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_pingpong_proto_goTypes = []any{
	(*IsGameActiveResponse)(nil),  // 0: pingpong.IsGameActiveResponse
	(*NewMatchRequest)(nil),       // 1: pingpong.NewMatchRequest
	(*NewMatchResponse)(nil),      // 2: pingpong.NewMatchResponse
	(*PingRequest)(nil),           // 3: pingpong.PingRequest
	(*PingResponse)(nil),          // 4: pingpong.PingResponse
	(*GetMatchRequest)(nil),       // 5: pingpong.GetMatchRequest
	(*GetMatchByIDRequest)(nil),   // 6: pingpong.GetMatchByIDRequest
	(*TestDBRequest)(nil),         // 7: pingpong.TestDBRequest
	(*TestDBResponse)(nil),        // 8: pingpong.TestDBResponse
	(*StartGameRequest)(nil),      // 9: pingpong.StartGameRequest
	(*StartGameResponse)(nil),     // 10: pingpong.StartGameResponse
	(*ReceiveBallRequest)(nil),    // 11: pingpong.ReceiveBallRequest
	(*ReceiveBallResponse)(nil),   // 12: pingpong.ReceiveBallResponse
	(*Match)(nil),                 // 13: pingpong.Match
	(*Turn)(nil),                  // 14: pingpong.Turn
	(*timestamppb.Timestamp)(nil), // 15: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 16: google.protobuf.Empty
}
var file_pingpong_proto_depIdxs = []int32{
	15, // 0: pingpong.Match.start_time:type_name -> google.protobuf.Timestamp
	15, // 1: pingpong.Match.end_time:type_name -> google.protobuf.Timestamp
	14, // 2: pingpong.Match.turns:type_name -> pingpong.Turn
	15, // 3: pingpong.Turn.time:type_name -> google.protobuf.Timestamp
	1,  // 4: pingpong.PlayerService.StartNewMatch:input_type -> pingpong.NewMatchRequest
	3,  // 5: pingpong.PlayerService.PlayerAPing:input_type -> pingpong.PingRequest
	3,  // 6: pingpong.PlayerService.PlayerBPing:input_type -> pingpong.PingRequest
	5,  // 7: pingpong.PlayerService.GetMatch:input_type -> pingpong.GetMatchRequest
	6,  // 8: pingpong.PlayerService.GetMatchByID:input_type -> pingpong.GetMatchByIDRequest
	7,  // 9: pingpong.PlayerService.TestDB:input_type -> pingpong.TestDBRequest
	16, // 10: pingpong.PlayerService.IsGameActive:input_type -> google.protobuf.Empty
	9,  // 11: pingpong.TableService.StartGame:input_type -> pingpong.StartGameRequest
	11, // 12: pingpong.TableService.ReceiveBall:input_type -> pingpong.ReceiveBallRequest
	2,  // 13: pingpong.PlayerService.StartNewMatch:output_type -> pingpong.NewMatchResponse
	4,  // 14: pingpong.PlayerService.PlayerAPing:output_type -> pingpong.PingResponse
	4,  // 15: pingpong.PlayerService.PlayerBPing:output_type -> pingpong.PingResponse
	13, // 16: pingpong.PlayerService.GetMatch:output_type -> pingpong.Match
	13, // 17: pingpong.PlayerService.GetMatchByID:output_type -> pingpong.Match
	8,  // 18: pingpong.PlayerService.TestDB:output_type -> pingpong.TestDBResponse
	0,  // 19: pingpong.PlayerService.IsGameActive:output_type -> pingpong.IsGameActiveResponse
	10, // 20: pingpong.TableService.StartGame:output_type -> pingpong.StartGameResponse
	12, // 21: pingpong.TableService.ReceiveBall:output_type -> pingpong.ReceiveBallResponse
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_pingpong_proto_init() }
func file_pingpong_proto_init() {
	if File_pingpong_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pingpong_proto_rawDesc), len(file_pingpong_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pingpong_proto_goTypes,
		DependencyIndexes: file_pingpong_proto_depIdxs,
		MessageInfos:      file_pingpong_proto_msgTypes,
	}.Build()
	File_pingpong_proto = out.File
	file_pingpong_proto_goTypes = nil
	file_pingpong_proto_depIdxs = nil
}
